buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion 31
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildToolsVersion '31.0.0'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1-native-mt'
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1-native-mt')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
}

repositories {
    mavenCentral()
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    packageOptions {
        prefix = "android" // will match kotlin.internal and all sub-packages of it
        suppress = true
    }
}

task dokkaMarkdown(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/markdown"
    packageOptions {
        prefix = "android" // will match kotlin.internal and all sub-packages of it
        suppress = true
    }
}


tasks.withType(Javadoc).all {
    enabled = false
}